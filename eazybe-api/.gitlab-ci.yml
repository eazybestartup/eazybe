image: docker:latest
services:
  - docker:dind

stages:
  - build
  - test
  - release
  - deploy
  #- sast

variables:
  CONTAINER_SHA_IMAGE: $CI_REGISTRY_PRIVATE/$CI_PROJECT_NAME:$CI_COMMIT_SHA
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_PRIVATE/$CI_PROJECT_NAME:latest

.docker_login: &docker_login |
  docker login -u $CI_REGISTRY_USER_PRIVATE -p $CI_JOB_TOKEN_PRIVATE $CI_REGISTRY_PRIVATE

.kube_config: &kube_config |
  echo "Configuring kube for $ENV_DEPLOY"
  eval ip=\$KUBE_"$ENV_DEPLOY"_IP
  echo "$ip kubernetes" >> /etc/hosts
  mkdir ~/.kube
  eval cfg=\$KUBE_"$ENV_DEPLOY"_CONFIG
  echo "$cfg" > ~/.kube/config
  export KUBECONFIG=~/.kube/config
  kubectl version
  kubectl cluster-info
  
build:
  stage: build
  script:
    - *docker_login
    - docker build --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN -t $CONTAINER_SHA_IMAGE .
    - docker push $CONTAINER_SHA_IMAGE

test:
  stage: test
  script:
    - *docker_login
    #- docker run -e RAILS_ENV=test -v "/builds/dev-mmcafe/$CI_PROJECT_NAME/coverage:/coverage" $CONTAINER_SHA_IMAGE /bin/bash -c
    #  'rake db:migrate && rubocop app && rake test && cp -r coverage/* /coverage'
  #artifacts:
    #paths:
      #- /builds/dev-mmcafe/$CI_PROJECT_NAME/coverage/

release-image:
  stage: release
  script:
    - *docker_login
    - docker pull $CONTAINER_SHA_IMAGE
    - docker tag $CONTAINER_SHA_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
    
    
  only:
    - master

deploy_development:
  stage: deploy
  image: lwolf/kubectl_deployer
  script:
    - export ENV_DEPLOY="DEV"
    - *kube_config
    - kubectl set image deployments/$CI_PROJECT_NAME $CI_PROJECT_NAME=$CONTAINER_SHA_IMAGE
  environment:
    name: development
  only:
    - master

deploy_testing:
  stage: deploy
  image: lwolf/kubectl_deployer
  script:
    - export ENV_DEPLOY="TST"
    - *kube_config
    - kubectl set image deployments/$CI_PROJECT_NAME $CI_PROJECT_NAME=$CONTAINER_SHA_IMAGE
  environment:
    name: testing
  when: manual
  only:
    - master

deploy_production:
  stage: deploy
  image: lwolf/kubectl_deployer
  script:
    - export ENV_DEPLOY="PRD"
    - *kube_config
    - kubectl set image deployments/$CI_PROJECT_NAME $CI_PROJECT_NAME=$CONTAINER_SHA_IMAGE
  environment:
    name: production
  when: manual
  only:
    - master   
#
#sast:container:
#  stage: sast
#  allow_failure: true
#  script:
#    - *docker_login    
#    - docker run -d --name db arminc/clair-db:latest
#    - docker run -p 6060:6060 --link db:postgres -d --name clair arminc/clair-local-scan:v2.0.1
#    - apk add -U wget ca-certificates
#    - docker pull ${CONTAINER_SHA_IMAGE} 
#    - wget https://github.com/arminc/clair-scanner/releases/download/v8/clair-scanner_linux_amd64
#    - mv clair-scanner_linux_amd64 clair-scanner
#    - chmod +x clair-scanner
#    - touch clair-whitelist.yml
#    - ./clair-scanner -c http://docker:6060 --ip $(hostname -i) -r gl-sast-container-report.json -l clair.log -w clair-whitelist.yml ${CONTAINER_SHA_IMAGE} || true
#  artifacts:
#    paths: [gl-sast-container-report.json]
